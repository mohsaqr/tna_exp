% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/centralities.R
\name{calculate.centralities}
\alias{calculate.centralities}
\title{Calculate Centralities for a Transition Matrix}
\usage{
calculate.centralities(mat)
}
\arguments{
\item{mat}{A square matrix representing transition probabilities or adjacency.}
}
\value{
A data frame containing centrality measures for each interaction.
}
\description{
This function calculates various centrality measures for a given transition matrix.
}
\details{
This function calculates several centrality measures using the \code{igraph}, \code{NetworkToolbox}, \code{keyplayer}, and \code{qgraph} packages.
The measures include:
\describe{
  \item{\code{OutStrength}}{Outgoing strength centrality, calculated using \code{strength} with \code{mode = "out"} from \code{igraph}. It measures the total weight of the outgoing edges from each node.}
  \item{\code{InStrength}}{Incoming strength centrality, calculated using \code{strength} with \code{mode = "in"} from \code{igraph}. It measures the total weight of the incoming edges to each node.}
  \item{\code{ClosenessIn}}{Closeness centrality (incoming), calculated using \code{closeness} with \code{mode = "in"} from \code{igraph}. It measures how close a node is to all other nodes based on the incoming paths.}
  \item{\code{ClosenessOut}}{Closeness centrality (outgoing), calculated using \code{closeness} with \code{mode = "out"} from \code{igraph}. It measures how close a node is to all other nodes based on the outgoing paths.}
  \item{\code{Closeness}}{Closeness centrality (overall), calculated using \code{closeness} with \code{mode = "all"} from \code{igraph}. It measures how close a node is to all other nodes based on both incoming and outgoing paths.}
  \item{\code{Betweenness}}{Betweenness centrality, calculated using \code{rspbc} from \code{NetworkToolbox}. It measures the extent to which a node lies on the shortest paths between other nodes.}
  \item{\code{Diffusion}}{Diffusion centrality, calculated using \code{diffusion} from \code{keyplayer}. It measures the influence of a node in spreading information through the network.}
  \item{\code{Clustering}}{Clustering coefficient, calculated using \code{clustcoef_auto} from \code{qgraph} on the symmetric adjacency matrix obtained via \code{as.symmetricAdjacencyMatrix} with \code{rule = "weak"} from \code{DCG}. It measures the degree to which nodes tend to cluster together.}
}
}
\examples{
\dontrun{
  library(TraMineR)
  data(biofam3c)

  # Preparing the sequence data
  seq_data <- seqdef(biofam3c$biofam)

  # Building a transition matrix from the sequence data
  tna_model <- build.tna(seq_data)
  transition_matrix <- tna_model$Matrix

  # Calculating the centralities
  calculate.centralities(transition_matrix)

  # Building a transition matrix from the sequence data without loops
  transition_matrix0 <- tna_model$Matrix0

  # Calculating the centralities for the matrix without loops
  calculate.centralities(transition_matrix0)
}

}
