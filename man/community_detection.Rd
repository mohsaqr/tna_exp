% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/community.R
\name{community_detection}
\alias{community_detection}
\title{Community Detection for Transition Networks}
\usage{
community_detection(x, cluster = NULL, Gamma = 1, color_palette = color_vector)
}
\arguments{
\item{x}{A \code{tna} object that contains transition matrices.}

\item{cluster}{An optional argument specifying which cluster to analyze.
If \code{NULL}, the function will analyze all clusters in \code{x}.}

\item{Gamma}{A numeric parameter that affects the behavior of certain algorithms
like the Spin Glass method. Defaults to \code{1}.}

\item{color_palette}{A vector of colors used for visualizing community assignments.}
}
\value{
A list where each element represents the result of community detection
for a specific cluster. Each cluster's result is returned by the internal
\code{find_communities} function, which provides community counts and assignments
across different algorithms.
}
\description{
This function detects communities within the transition networks (represented
by the \code{tna} object).
It uses various algorithms to find communities in the graph representation of
transitions and returns a list of communities for each cluster or a specified cluster.
}
\details{
If multiple transition matrices exist, the function iterates over each cluster
in the \code{tna} object to find communities using different algorithms.
The function uses the \code{igraph} package to convert the transition matrices into
graphs and then applies community detection algorithms (e.g., Walktrap, Fast
Greedy, Label Propagation, Infomap, Edge Betweenness, Leading Eigenvector,
and Spin Glass).
}
\examples{
\dontrun{
# Detect communities for all clusters
communities <- community_detection(tna_model)

# Detect communities for a specific cluster
communities <- community_detection(tna_model, cluster = 1)
}
}
\author{
Mohammed Saqr (\email{mohammed.saqr@uef.fi})
}
