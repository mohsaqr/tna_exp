% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build.R
\name{build_network_with_edge_betweenness}
\alias{build_network_with_edge_betweenness}
\title{Build and Visualize a Network with Edge Betweenness}
\usage{
build_network_with_edge_betweenness(x, cluster = 1, layout = NULL, plot = TRUE)
}
\arguments{
\item{x}{A \code{tna} object containing transition matrices and associated metadata.}

\item{cluster}{An integer specifying which cluster to analyze. Defaults to \code{1}.}

\item{layout}{A numeric matrix or character string specifying the layout of the network for the visualization. If \code{NULL}, a default layout is used. Defaults to \code{NULL}.}

\item{plot}{A logical value indicating whether to visualize the network. Defaults to \code{TRUE}.}
}
\value{
A data frame where each row represents an edge, and columns include the source and target nodes, and the calculated edge betweenness.
}
\description{
This function builds a network from a transition matrix in a \code{tna} object and computes edge betweenness for the network. Optionally, it visualizes the network using the \code{qgraph} package, with the edge thickness representing the edge betweenness values.
}
\details{
The function first converts the transition matrix for the specified cluster into a directed graph using the \code{igraph} package. It then calculates the edge betweenness of the graph, which is a measure of how often an edge lies on the shortest paths between pairs of nodes.

If \code{plot = TRUE}, the function uses \code{qgraph} to visualize the network, where edge thickness is proportional to edge betweenness, node colors are derived from the \code{tna} object, and \code{Pie} values from the \code{tna} object are displayed on the nodes.

The layout of the network can be customized via the \code{layout} parameter, which can either be a predefined layout from \code{qgraph} or a user-specified matrix of node positions.
}
\examples{
# Build and visualize the network for the first cluster
\dontrun{
edge_betweenness_df <- build_network_with_edge_betweenness(tna_model)

# Build the network without visualization
edge_betweenness_df <- build_network_with_edge_betweenness(tna_model, plot = FALSE)
}
}
\seealso{
\code{qgraph}, \code{igraph}
}
