% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build.R
\name{build_tna}
\alias{build_tna}
\alias{build_tna.tbl_graph}
\alias{build_tna.stslist}
\title{Build a Transition Network Analysis Model}
\usage{
build_tna(x, ...)

\method{build_tna}{tbl_graph}(x, inits, ...)

\method{build_tna}{stslist}(x, ...)
}
\arguments{
\item{x}{A \code{stslist} object created with \code{\link[seqHMM:TraMineR_imports]{seqHMM::seqdef()}}
describing a sequence of events or states to be used for building
the Markov model or a tidy graph (\code{tbl_graph}) depicting the transition
network. The edge data should have a column named \code{weight} giving the
transition probabilities. The probabilities can be unnormalized.}

\item{...}{Additional arguments passed to \code{\link[seqHMM:build_mm]{seqHMM::build_mm()}} when \code{x} is
a \code{stslist} object.}

\item{inits}{A \code{numeric} vector of initial state probabilities for each
state. Should be provided only if \code{x} is a tidy graph. The elements will
be scaled such that they sum to one.}
}
\value{
An object of class \code{tna} which is a tidy graph with an additional
node attribute \code{inits} describing the initial state probabilities
}
\description{
This function constructs a transition network analysis (TNA) model from a
given sequence. It takes a sequence of events or states and builds a Markov
model using \code{\link[seqHMM:build_mm]{seqHMM::build_mm()}}. It extracts the transition probabilities
and initial probabilities from the model and stores them in a \code{list} along
with the state labels. Additionally, it creates a transition matrix with
zero diagonal entries (without loops). Also accepts matrices of transition
probabilities and initial state probabilities directly.
}
\examples{
tna_model <- build_tna(engagement)
print(tna_model)

}
