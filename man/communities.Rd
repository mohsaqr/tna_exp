% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusters.R, R/communities.R
\name{communities.group_tna}
\alias{communities.group_tna}
\alias{communities}
\alias{communities.tna}
\title{Community Detection for Transition Networks}
\usage{
\method{communities}{group_tna}(x, ...)

communities(x, ...)

\method{communities}{tna}(x, gamma = 1, ...)
}
\arguments{
\item{x}{A \code{tna} object that contains transition matrices.}

\item{...}{Ignored.}

\item{gamma}{A \code{numeric} value depicting a parameter that affects the
behavior of certain algorithms like the Spin Glass method. Defaults to \code{1}.}
}
\value{
An object of class \code{tna_communities} which is a \code{list} with an
element for each cluster containing:
\itemize{
\item \code{counts}: A \code{list} with the number of communities found
by each algorithm.
\item \code{assignments}: A \code{data.frame} where each row corresponds to a
node and each column to a community detection algorithm,
with color-coded community assignments.
}
}
\description{
This function detects communities within the transition networks
(represented by the \code{tna} object).
It uses various algorithms to find communities in the graph representation
of transitions and returns a \code{list} of communities for each cluster or a
specified cluster. If multiple transition matrices exist, the function
iterates over each cluster in the \code{tna} object to find communities using
different algorithms. The function uses the \code{igraph} package to convert
the transition matrices into graphs and then applies community detection
algorithms (e.g., Walktrap, Fast Greedy, Label Propagation, Infomap,
Edge Betweenness, Leading Eigenvector, and Spin Glass).
}
\examples{
model <- tna(engagement)
comm <- communities(model)

}
\seealso{
Cluster-related functions
\code{\link{as.igraph.group_tna}()},
\code{\link{centralities}()},
\code{\link{deprune.group_tna}()},
\code{\link{estimate_cs}()},
\code{\link{group_tna}()},
\code{\link{mmm_stats}()},
\code{\link{plot.group_tna}()},
\code{\link{print.summary.group_tna}()},
\code{\link{prune.group_tna}()},
\code{\link{pruning_details.group_tna}()},
\code{\link{reprune.group_tna}()},
\code{\link{summary.group_tna}()}

Pattern-finding functions
\code{\link{plot.tna_communities}()}
}
\concept{clusters}
\concept{patterns}
